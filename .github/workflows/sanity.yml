name: Test Workflow

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Decode and install WireGuard config
        run: |
          echo "${{ secrets.WG_CONF_BASE64 }}" | base64 --decode > /tmp/openg2p-e2e.conf
          sudo mkdir -p /etc/wireguard
          sudo mv /tmp/openg2p-e2e.conf /etc/wireguard/openg2p-e2e.conf
          sudo chmod 600 /etc/wireguard/openg2p-e2e.conf
          sudo apt-get update
          sudo apt-get install -y wireguard
          sudo systemctl start wg-quick@openg2p-e2e.service
      
      

      - name: Chrome setup
        uses: browser-actions/setup-chrome@v1

      - run: chrome --version

      - name: Chromedriver setup
        uses: nanasess/setup-chromedriver@v2

      - run: |
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &

      - name: Build with Maven
        run: mvn clean install -DskipTests=true

      - name: Run Sanity tests
        run: mvn clean test -Dallure.results.directory=target/allure-results


      - name: Load test report history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
            ref: gh-pages
            path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
            gh_pages: gh-pages
            allure_history: allure-history
            allure_results: target/allure-results

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
            publish_branch: gh-pages
            publish_dir: allure-history


      - name: Slack Notification on failure
        if: ${{ failure() }}
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: '{"text": "*Workflow failed.*\nActor: ${{ github.actor }}\nCommit ID: ${{ github.sha }}\nFailed Step: ${{ github.event_name }}"}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_INCOMING_WEBHOOK }}

      - name: Slack Notification on success
        if: ${{ success() }}
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: '{"text": "*Workflow ran successfully.*\nActor: ${{ github.actor }}\nCommit ID: ${{ github.sha }}"}'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_INCOMING_WEBHOOK }}
